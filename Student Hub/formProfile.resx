<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picProfile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>